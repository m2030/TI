<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item value="false" key="isRegEx"/>
		<item value="ENC_SPI_Send" key="selection"/>
		<item value="false" key="casesensitive"/>
		<item value="false" key="incremental"/>
		<item value="true" key="wrap"/>
		<item value="false" key="wholeword"/>
		<list key="findhistory">
			<item value="ENC_SPI_Send"/>
			<item value="HAL_GetTick"/>
			<item value="SysCtlClockGet"/>
			<item value="NET_NDK"/>
			<item value="/*&#x0A; * Copyright (c) 2015, Texas Instruments Incorporated&#x0A; * All rights reserved.&#x0A; *&#x0A; * Redistribution and use in source and binary forms, with or without&#x0A; * modification, are permitted provided that the following conditions&#x0A; * are met:&#x0A; *&#x0A; * *  Redistributions of source code must retain the above copyright&#x0A; *    notice, this list of conditions and the following disclaimer.&#x0A; *&#x0A; * *  Redistributions in binary form must reproduce the above copyright&#x0A; *    notice, this list of conditions and the following disclaimer in the&#x0A; *    documentation and/or other materials provided with the distribution.&#x0A; *&#x0A; * *  Neither the name of Texas Instruments Incorporated nor the names of&#x0A; *    its contributors may be used to endorse or promote products derived&#x0A; *    from this software without specific prior written permission.&#x0A; *&#x0A; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;&#x0A; * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,&#x0A; * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR&#x0A; * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR&#x0A; * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#x0A; * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#x0A; * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;&#x0A; * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,&#x0A; * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR&#x0A; * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,&#x0A; * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#x0A; */&#x0A;/** ============================================================================&#x0A; *  @file       EK_TM4C1294XL.h&#x0A; *&#x0A; *  @brief      EK_TM4C1294XL Board Specific APIs&#x0A; *&#x0A; *  The EK_TM4C1294XL header file should be included in an application as&#x0A; *  follows:&#x0A; *  @code&#x0A; *  #include &lt;EK_TM4C1294XL.h&gt;&#x0A; *  @endcode&#x0A; *&#x0A; *  ============================================================================&#x0A; */&#x0A;&#x0A;#ifndef __EK_TM4C1294XL_H&#x0A;#define __EK_TM4C1294XL_H&#x0A;&#x0A;#ifdef __cplusplus&#x0A;extern &quot;C&quot; {&#x0A;#endif&#x0A;&#x0A;/* LEDs on EK_TM4C1294XL are active high. */&#x0A;#define EK_TM4C1294XL_LED_OFF (0)&#x0A;#define EK_TM4C1294XL_LED_ON  (1)&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_EMACName&#x0A; *  @brief  Enum of EMAC names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_EMACName {&#x0A;    EK_TM4C1294XL_EMAC0 = 0,&#x0A;&#x0A;    EK_TM4C1294XL_EMACCOUNT&#x0A;} EK_TM4C1294XL_EMACName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_GPIOName&#x0A; *  @brief  Enum of LED names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_GPIOName {&#x0A;    EK_TM4C1294XL_USR_SW1 = 0,&#x0A;    EK_TM4C1294XL_USR_SW2,&#x0A;    EK_TM4C1294XL_D1,&#x0A;    EK_TM4C1294XL_D2,&#x0A;&#x0A;    EK_TM4C1294XL_GPIOCOUNT&#x0A;} EK_TM4C1294XL_GPIOName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_I2CName&#x0A; *  @brief  Enum of I2C names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_I2CName {&#x0A;    EK_TM4C1294XL_I2C7 = 0,&#x0A;    EK_TM4C1294XL_I2C8,&#x0A;&#x0A;    EK_TM4C1294XL_I2CCOUNT&#x0A;} EK_TM4C1294XL_I2CName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_PWMName&#x0A; *  @brief  Enum of PWM names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_PWMName {&#x0A;    EK_TM4C1294XL_PWM0 = 0,&#x0A;&#x0A;    EK_TM4C1294XL_PWMCOUNT&#x0A;} EK_TM4C1294XL_PWMName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_SDSPIName&#x0A; *  @brief  Enum of SDSPI names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_SDSPIName {&#x0A;    EK_TM4C1294XL_SDSPI0 = 0,&#x0A;    EK_TM4C1294XL_SDSPI1,&#x0A;&#x0A;    EK_TM4C1294XL_SDSPICOUNT&#x0A;} EK_TM4C1294XL_SDSPIName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_SPIName&#x0A; *  @brief  Enum of SPI names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_SPIName {&#x0A;    EK_TM4C1294XL_SPI2 = 0,&#x0A;    EK_TM4C1294XL_SPI3,&#x0A;&#x0A;    EK_TM4C1294XL_SPICOUNT&#x0A;} EK_TM4C1294XL_SPIName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_UARTName&#x0A; *  @brief  Enum of UARTs on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_UARTName {&#x0A;    EK_TM4C1294XL_UART0 = 0,&#x0A;&#x0A;    EK_TM4C1294XL_UARTCOUNT&#x0A;} EK_TM4C1294XL_UARTName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_USBMode&#x0A; *  @brief  Enum of USB setup function on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_USBMode {&#x0A;    EK_TM4C1294XL_USBDEVICE,&#x0A;    EK_TM4C1294XL_USBHOST&#x0A;} EK_TM4C1294XL_USBMode;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_USBMSCHFatFsName&#x0A; *  @brief  Enum of USBMSCHFatFs names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_USBMSCHFatFsName {&#x0A;    EK_TM4C1294XL_USBMSCHFatFs0 = 0,&#x0A;&#x0A;    EK_TM4C1294XL_USBMSCHFatFsCOUNT&#x0A;} EK_TM4C1294XL_USBMSCHFatFsName;&#x0A;&#x0A;/*&#x0A; *  @def    EK_TM4C1294XL_WatchdogName&#x0A; *  @brief  Enum of Watchdogs on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_WatchdogName {&#x0A;    EK_TM4C1294XL_WATCHDOG0 = 0,&#x0A;&#x0A;    EK_TM4C1294XL_WATCHDOGCOUNT&#x0A;} EK_TM4C1294XL_WatchdogName;&#x0A;&#x0A;/*!&#x0A; *  @def    EK_TM4C1294XL_WiFiName&#x0A; *  @brief  Enum of WiFi names on the EK_TM4C1294XL dev board&#x0A; */&#x0A;typedef enum EK_TM4C1294XL_WiFiName {&#x0A;    EK_TM4C1294XL_WIFI = 0,&#x0A;&#x0A;    EK_TM4C1294XL_WIFICOUNT&#x0A;} EK_TM4C1294XL_WiFiName;&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize the general board specific settings&#x0A; *&#x0A; *  This function initializes the general board specific settings.&#x0A; *  This includes:&#x0A; *     - Enable clock sources for peripherals&#x0A; */&#x0A;extern void EK_TM4C1294XL_initGeneral(void);&#x0A;&#x0A;/*!&#x0A; *  @brief Initialize board specific EMAC settings&#x0A; *&#x0A; *  This function initializes the board specific EMAC settings and&#x0A; *  then calls the EMAC_init API to initialize the EMAC module.&#x0A; *&#x0A; *  The EMAC address is programmed as part of this call.&#x0A; *&#x0A; */&#x0A;extern void EK_TM4C1294XL_initEMAC(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific GPIO settings&#x0A; *&#x0A; *  This function initializes the board specific GPIO settings and&#x0A; *  then calls the GPIO_init API to initialize the GPIO module.&#x0A; *&#x0A; *  The GPIOs controlled by the GPIO module are determined by the GPIO_PinConfig&#x0A; *  variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initGPIO(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific I2C settings&#x0A; *&#x0A; *  This function initializes the board specific I2C settings and then calls&#x0A; *  the I2C_init API to initialize the I2C module.&#x0A; *&#x0A; *  The I2C peripherals controlled by the I2C module are determined by the&#x0A; *  I2C_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initI2C(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific PWM settings&#x0A; *&#x0A; *  This function initializes the board specific PWM settings and then calls&#x0A; *  the PWM_init API to initialize the PWM module.&#x0A; *&#x0A; *  The PWM peripherals controlled by the PWM module are determined by the&#x0A; *  PWM_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initPWM(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific SDSPI settings&#x0A; *&#x0A; *  This function initializes the board specific SDSPI settings and then calls&#x0A; *  the SDSPI_init API to initialize the SDSPI module.&#x0A; *&#x0A; *  The SDSPI peripherals controlled by the SDSPI module are determined by the&#x0A; *  SDSPI_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initSDSPI(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific SPI settings&#x0A; *&#x0A; *  This function initializes the board specific SPI settings and then calls&#x0A; *  the SPI_init API to initialize the SPI module.&#x0A; *&#x0A; *  The SPI peripherals controlled by the SPI module are determined by the&#x0A; *  SPI_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initSPI(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific UART settings&#x0A; *&#x0A; *  This function initializes the board specific UART settings and then calls&#x0A; *  the UART_init API to initialize the UART module.&#x0A; *&#x0A; *  The UART peripherals controlled by the UART module are determined by the&#x0A; *  UART_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initUART(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific USB settings&#x0A; *&#x0A; *  This function initializes the board specific USB settings and pins based on&#x0A; *  the USB mode of operation.&#x0A; *&#x0A; *  @param      usbMode    USB mode of operation&#x0A; */&#x0A;extern void EK_TM4C1294XL_initUSB(EK_TM4C1294XL_USBMode usbMode);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific USBMSCHFatFs settings&#x0A; *&#x0A; *  This function initializes the board specific USBMSCHFatFs settings and then&#x0A; *  calls the USBMSCHFatFs_init API to initialize the USBMSCHFatFs module.&#x0A; *&#x0A; *  The USBMSCHFatFs peripherals controlled by the USBMSCHFatFs module are&#x0A; *  determined by the USBMSCHFatFs_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initUSBMSCHFatFs(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific Watchdog settings&#x0A; *&#x0A; *  This function initializes the board specific Watchdog settings and then&#x0A; *  calls the Watchdog_init API to initialize the Watchdog module.&#x0A; *&#x0A; *  The Watchdog peripherals controlled by the Watchdog module are determined&#x0A; *  by the Watchdog_config variable.&#x0A; */&#x0A;extern void EK_TM4C1294XL_initWatchdog(void);&#x0A;&#x0A;/*!&#x0A; *  @brief  Initialize board specific WiFi settings&#x0A; *&#x0A; *  This function initializes the board specific WiFi settings and then calls&#x0A; *  the WiFi_init API to initialize the WiFi module.&#x0A; *&#x0A; *  The hardware resources controlled by the WiFi module are determined by the&#x0A; *  WiFi_config va"/>
		</list>
		<list key="replacehistory">
			<item value="SysCtlClockGet"/>
		</list>
	</section>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog_dialogBounds">
		<item value="284" key="DIALOG_WIDTH"/>
		<item value="1|Segoe UI|9.0|0|WINDOWS|1|-12|0|0|0|400|0|0|0|1|0|0|0|0|Segoe UI" key="DIALOG_FONT_NAME"/>
		<item value="391" key="DIALOG_HEIGHT"/>
		<item value="854" key="DIALOG_X_ORIGIN"/>
		<item value="202" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
